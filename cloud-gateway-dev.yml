server:
  port: ${CUSTOM.SERVER.PORT:9080}

# Eureka Client Config
eureka:
  client:
    fetchRegistry: true
    registerWithEureka: true
    serviceUrl:
      defaultZone: ${EUREKA.SERVER.HOSTNAME:http://localhost:8761/eureka}

# Circuit Breaker configuration
resilience4j:
  circuitbreaker:
    configs:        
      productServiceCircuitBreaker:
        slidingWindowSize: 8
        failureRateThreshold: 60
        waitDurationInOpenState: 20s
        permittedNumberOfCallsInHalfOpenState: 4
        slowCallDurationThreshold: 1s
        slowCallRateThreshold: 50

    instances:
      product-service-cb:
        base-config: productServiceCircuitBreaker


# Cloud Gateway Routes
filter:
  parameters:
    appCallerName: MitocodeConfig
    flag: false

spring:
  cloud:
    gateway:
      routes:
        
        - id: product-service
          uri: lb://product-service
          predicates:
            - Path=/api/product-service/**
          filters:
            - StripPrefix=2
            - name: CircuitBreaker
              args:
                name: product-service-cb
                statusCode: 400, 401, 404, 500, 503, 504
            # - AddRequestHeader=appCallerName, ${filter.parameters.appCallerName}
            # - AddRequestParameter=flag, ${filter.parameters.flag}
            # - name: MitocodeProductFilter
            #   args:
            #     headerKey: appCallerName
            #     headerValue: Java17


        - id: user-service
          uri: lb://user-service
          predicates:
            - Path=/api/user-service/**
          filters:
            - StripPrefix=2